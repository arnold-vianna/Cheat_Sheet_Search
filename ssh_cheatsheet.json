{
    "ssh user@host": "Connect to a remote server",
    "ssh -p port user@host": "Connect to a remote server using a specific port",
    "ssh -i keyfile user@host": "Connect to a remote server using a specific key file",
    "ssh -X user@host": "Enable X11 forwarding",
    "ssh -Y user@host": "Enable trusted X11 forwarding",
    "ssh -A user@host": "Enable agent forwarding",
    "ssh -L local_port:host:remote_port user@host": "Create a local port forward",
    "ssh -R remote_port:host:local_port user@host": "Create a remote port forward",
    "ssh -D port user@host": "Create a dynamic application-level port forward",
    "ssh -N user@host": "Do not execute a remote command",
    "ssh -f user@host sleep time": "Put SSH in the background",
    "ssh-keygen -t type": "Generate a new SSH key pair",
    "ssh-copy-id -i keyfile user@host": "Install your public key in a remote server's authorized_keys",
    "ssh-add keyfile": "Add a private key to the authentication agent",
    "ssh-agent bash": "Start the SSH agent in the background",
    "ssh-agent $SHELL": "Start the SSH agent for the current shell",
    "ssh-agent -k": "Kill the SSH agent",
    "ssh-keyscan -t type host": "Get the public key of a remote server",
    "scp source user@host:destination": "Secure copy (remote file copy program)",
    "sftp user@host": "Secure file transfer program",
    "sshfs user@host:remote_dir local_dir": "Mount a remote directory",
    "ssh user@host command": "Execute a command on a remote server",
    "ssh user@host 'bash -s' < script.sh": "Execute a local script on a remote server",
    "ssh -t user@host top": "Execute a command with a pseudo-terminal",
    "ssh user@host 'sudo command'": "Execute a command as another user",
    "ssh user@host tail -f /var/log/syslog": "Monitor a remote log file",
    "ssh user@host nc -l port": "Set up a reverse shell",
    "ssh user@host nc host port": "Set up a bind shell",
    "ssh user@host 'ssh-keygen -R host'": "Remove a host key from the known_hosts file",
    "ssh user@host 'ssh-keygen -A'": "Regenerate the host keys",
    "ssh user@host 'journalctl -f'": "Monitor the systemd journal",
    "ssh user@host 'systemctl status service'": "Check the status of a service",
    "ssh user@host 'systemctl start service'": "Start a service",
    "ssh user@host 'systemctl stop service'": "Stop a service",
    "ssh user@host 'systemctl restart service'": "Restart a service",
    "ssh user@host 'systemctl reload service'": "Reload a service",
    "ssh user@host 'systemctl enable service'": "Enable a service to start on boot",
    "ssh user@host 'systemctl disable service'": "Disable a service to start on boot",
    "ssh user@host 'systemctl is-active service'": "Check if a service is active",
    "ssh user@host 'systemctl is-enabled service'": "Check if a service is enabled",
    "ssh user@host 'systemctl list-units --type service'": "List all services",
    "ssh user@host 'systemctl list-unit-files --state enabled'": "List enabled services",
    "ssh user@host 'systemctl list-unit-files --state disabled'": "List disabled services",
    "ssh user@host 'systemctl list-dependencies service'": "List dependencies of a service",
    "ssh user@host 'systemctl cat service'": "Show the service file",
    "ssh user@host 'systemctl edit service'": "Edit the service file",
    "ssh user@host 'systemctl mask service'": "Mask a service",
    "ssh user@host 'systemctl unmask service'": "Unmask a service",
    "ssh user@host 'systemctl revert service'": "Revert a service to its vendor version",
    "ssh user@host 'systemctl preset service'": "Enable/disable a service based on preset files",
    "ssh user@host 'systemctl is-system-running'": "Check if the system is running",
    "ssh user@host 'systemctl list-jobs'": "List jobs",
    "ssh user@host 'systemctl list-timers'": "List timers",
    "ssh user@host 'systemctl list-sockets'": "List sockets",
    "ssh user@host 'systemctl list-machines'": "List machines",
    "ssh user@host 'systemctl list-unit-files'": "List unit files",
    "ssh user@host 'systemctl list-units'": "List units",
    "ssh user@host 'systemctl show service'": "Show properties of a service",
    "ssh user@host 'systemctl set-property service property=value'": "Set a property of a service",
    "ssh user@host 'systemctl unset-property service property'": "Unset a property of a service",
    "ssh user@host 'systemctl reload-or-restart service'": "Reload or restart a service",
    "ssh user@host 'systemctl rescue service'": "Enter rescue mode for a service",
    "ssh user@host 'systemctl mount-image image'": "Mount an image",
    "ssh user@host 'systemctl unmount-image image'": "Unmount an image",
    "ssh user@host 'systemctl enable-linger user'": "Enable linger for a user",
    "ssh user@host 'systemctl disable-linger user'": "Disable linger for a user",
    "ssh user@host 'systemctl is-enabled-linger user'": "Check if linger is enabled for a user",
    "ssh user@host 'systemctl daemon-reload'": "Reload systemd manager configuration",
    "ssh user@host 'systemctl daemon-reexec'": "Reexecute systemd manager",
    "ssh user@host 'systemctl default'": "Enter system default mode",
    "ssh user@host 'systemctl emergency'": "Enter system emergency mode",
    "ssh user@host 'systemctl halt'": "Shut down and halt the system",
    "ssh user@host 'systemctl poweroff'": "Shut down and power-off the system",
    "ssh user@host 'systemctl reboot'": "Shut down and reboot the system",
    "ssh user@host 'systemctl kexec'": "Shut down and load a new kernel",
    "ssh user@host 'systemctl suspend'": "Suspend the system",
    "ssh user@host 'systemctl hibernate'": "Hibernate the system",
    "ssh user@host 'systemctl hybrid-sleep'": "Hibernate and suspend the system",
    "ssh user@host 'systemctl rescue'": "Enter system rescue mode",
    "ssh user@host 'systemctl exit [EXIT_CODE]'": "Shut down the system with an exit code",
    "ssh user@host 'systemctl is-system-running --wait'": "Wait until the system is running",
    "ssh user@host 'systemctl is-system-running --help'": "Show help for the is-system-running command",
    "ssh user@host 'systemctl is-system-running --version'": "Show version for the is-system-running command",
    "ssh user@host 'systemctl is-system-running --quiet'": "Be quiet for the is-system-running command"
    }